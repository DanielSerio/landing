{"version":3,"sources":["state/ThemeContext.tsx","components/partials/Footer/Footer.tsx","components/controls/Button/Button.tsx","components/navigation/HeaderNav/HeaderNav.tsx","hooks/useClickOutside.tsx","components/partials/Header/Header.tsx","components/containers/Section/Section.tsx","components/navigation/ProjectNav/ProjectNav.tsx","components/containers/Project/Project.tsx","components/projects/GameOfLife/GameOfLifeControls/GameOfLifeControls.tsx","components/projects/GameOfLife/Life.ts","components/projects/GameOfLife/GameOfLife.tsx","components/containers/ButtonGroup/ButtonGroup.tsx","components/projects/Todos/TodoControls/TodoControls.tsx","components/controls/Input/Input.tsx","components/projects/Todos/TodoForm/TodoForm.tsx","components/controls/Checkbox/Checkbox.tsx","components/projects/Todos/TodoItem/TodoItem.tsx","components/projects/Todos/TodoList/TodoList.tsx","components/projects/Todos/Todos.tsx","components/projects/WPMGame/Controls/WPMControls.tsx","components/projects/WPMGame/Results/WPMResults.tsx","components/projects/WPMGame/accuracy.ts","components/projects/WPMGame/Display/WPMDisplay.tsx","components/projects/WPMGame/WPMGame.tsx","components/projects/WPMGame/useTimer.tsx","components/projects/WPMGame/WPMGameDetails.ts","components/partials/Main/Main.tsx","App.tsx","index.tsx"],"names":["getPrefersDark","prefersDark","localStorage","getItem","setItem","JSON","parse","ThemeContext","createContext","ThemeProvider","children","useState","state","setState","toggleTheme","value","useMemo","useEffect","Provider","Footer","className","Button","variant","small","leftIcon","rightIcon","onClick","rest","trim","replace","onTouchEnd","HeaderNav","isOpen","open","close","useContext","ref","useRef","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","useClickOutside","Ul","urls","resume","codepen","opinionflexr","Object","keys","map","key","href","undefined","Header","setIsOpen","Section","ProjectNav","to","Project","title","desc","GameOfLifeControls","refresh","nextFrame","Cell","x","y","chance","isAlive","random","Math","this","createCells","n","colCount","sqrt","cells","row","push","GameOfLife","setCells","theme","cellOptions","size","aliveFill","aliveStroke","deadFill","deadStroke","height","width","ctx","getContext","clearRect","canvas","options","renderCell","cell","beginPath","save","fillStyle","strokeStyle","translate","rect","fill","stroke","restore","closePath","length","console","log","Date","getTime","renderCells","countLivingNeighbors","count","origin","newCells","newCell","getNextCells","ButtonGroup","TodoControls","noneComplete","noneSelected","allSelected","selectAll","selectNone","removeCompleted","removeSelected","disabled","Input","TodoForm","addTodo","todo","setTodo","onSubmit","e","preventDefault","reset","type","name","onChange","defaultValue","style","marginLeft","Checkbox","defaultChecked","checked","setChecked","handleClick","TodoItem","toggleSelected","toggleComplete","selected","complete","text","opacity","textDecoration","TodoList","todos","Todos","setTodos","sort","a","b","filter","t","updateTodo","data","searchString","toUpperCase","WPMControls","isRunning","stop","start","doneClicked","setDoneClicked","WPMResults","wpm","accuracy","totalTime","toFixed","getAccuracy","compareText","longer","shorter","longerLength","toLowerCase","costs","Array","i","lastValue","j","newValue","charAt","min","editDistance","parseFloat","WPMDisplay","content","lines","lineCount","match","words","split","arr","chunkSize","temp","slice","chunkArray","divideLines","font","forEach","line","fillText","join","WPMGame","ipsum","LoremIpsum","setIsRunning","timerInterval","setTimerInterval","timer","setTimer","timeStart","setTimeStart","clear","setInterval","now","group","clearInterval","cb","elapsed","useTimer","generateParagraphs","setContent","userText","setUserText","setAccuracy","setWpm","round","w","isFinite","focus","Main","id","path","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f81dd3b.chunk.js","sourcesContent":["import { createContext, Context, ComponentProps, useState, useMemo, useEffect } from \"react\";\r\n\r\nexport interface ITheme {\r\n  prefersDark: boolean;\r\n}\r\n\r\ndeclare type ThemeContextType = [ITheme, () => void];\r\n\r\ndeclare type IThemeContext = Context<ThemeContextType>;\r\n\r\nconst getPrefersDark = (): boolean => {\r\n  let prefersDark: string|null = localStorage.getItem('prefers-dark');\r\n  if (prefersDark === null) prefersDark = 'false';\r\n  localStorage.setItem('prefers-dark', prefersDark);\r\n  return JSON.parse(prefersDark);\r\n}\r\n\r\nconst ThemeContext: IThemeContext = createContext([{ prefersDark: getPrefersDark() }, () => {}]);\r\n\r\nexport const ThemeProvider = ({ children }: ComponentProps<'div'>) => {\r\n  const [state, setState] = useState<ITheme>({ prefersDark: getPrefersDark() });\r\n\r\n  const toggleTheme = (): void => setState({ prefersDark: !state.prefersDark});\r\n\r\n  const value = useMemo<ThemeContextType>(() => [state, toggleTheme], [state, toggleTheme]);\r\n\r\n  useEffect(() => {\r\n    if (state.prefersDark) localStorage.setItem('prefers-dark', 'true'); \r\n    if (!state.prefersDark) localStorage.setItem('prefers-dark', 'false'); \r\n  }, [state, toggleTheme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}; \r\n\r\nexport default ThemeContext;","import React from 'react'\r\nimport './Footer.css'\r\nimport './Footer.dark.css'\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"footer text-small\">\r\n      <div>Dan Serio</div>\r\n      dserio.d@gmail.com\r\n    </footer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ButtonProps from './ButtonProps'\r\nimport './Button.css';\r\n\r\nexport default function Button({ variant, small, className, children, leftIcon, rightIcon, onClick, ...rest }: ButtonProps) {\r\n  return (\r\n    <button className={`btn ${small ? 'small' :''} ${variant || 'primary'} ${className || ''}`.trim().replace(/\\s+/g, ' ')} {...rest} onClick={onClick} onTouchEnd={onClick}>\r\n      {leftIcon}\r\n      <span>{children}</span>\r\n      {rightIcon}\r\n    </button>\r\n  )\r\n}\r\n","import React, { ReactElement, useContext, useRef } from 'react'\r\nimport HeaderNavProps from './HeaderNavProps';\r\nimport { ImMenu } from 'react-icons/im';\r\nimport { VscColorMode } from 'react-icons/vsc';\r\nimport { IoMdClose } from 'react-icons/io';\r\nimport './HeaderNav.css';\r\nimport Button from '../../controls/Button/Button';\r\nimport ThemeContext from '../../../state/ThemeContext';\r\nimport useClickOutside from '../../../hooks/useClickOutside';\r\n\r\nexport default function HeaderNav({ isOpen, open, close }: HeaderNavProps) {\r\n  const [theme, toggleTheme] = useContext(ThemeContext);\r\n  const ref = useRef(null);\r\n\r\n  useClickOutside(ref, close);\r\n\r\n  const handleThemeClick = () => {\r\n    close();\r\n    toggleTheme();\r\n  };\r\n\r\n  const handleThemeTouch = () => {\r\n    close();\r\n    toggleTheme();\r\n  };\r\n\r\n  const Ul = (): ReactElement => {\r\n    const urls: {[key: string]: string} = {\r\n      resume: 'https://danserio.com',\r\n      codepen: 'https://codepen.io/radNoise',\r\n      opinionflexr: 'https://opinionflexr.com'\r\n    };\r\n\r\n    return (\r\n      <ul>\r\n        {Object.keys(urls).map((key: string) => {\r\n          return (\r\n            <li key={key}>\r\n              <a href={urls[key]}>{key}</a>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"header-nav\">\r\n      <div className=\"icon\">\r\n        <ImMenu onClick={open} onTouchEnd={open}/>\r\n      </div>\r\n      <nav className={isOpen ? 'open' : undefined} ref={ref}>\r\n        <header>\r\n          <IoMdClose onClick={close} onTouchEnd={close}/> \r\n        </header>\r\n        <Ul />\r\n        <footer>\r\n          <Button className=\"subtle menu-btn\" leftIcon={<VscColorMode />} onTouchEnd={handleThemeTouch} onClick={handleThemeClick}>Theme</Button>\r\n        </footer>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n","import {  RefObject, useEffect } from \"react\";\r\n\r\nexport default function useClickOutside(ref: RefObject<any>, handler: (e?: any) => void) {\r\n  useEffect(\r\n    () => {\r\n      function listener(this: Document, event: any): void {\r\n        if (!ref.current || ref.current.contains(event.target)) {\r\n          return;\r\n        }\r\n\r\n        handler(event);\r\n      };\r\n\r\n      document.addEventListener(\"mousedown\",listener);\r\n      document.addEventListener(\"touchstart\", listener);\r\n\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", listener);\r\n        document.removeEventListener(\"touchstart\", listener);\r\n      };\r\n    },\r\n    [ref, handler]\r\n  );\r\n}","import React from 'react'\r\nimport { useState } from 'react'\r\nimport HeaderNav from '../../navigation/HeaderNav/HeaderNav'\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n  \r\n  const openMenu = () => setIsOpen(true);\r\n\r\n  const closeMenu = () => setIsOpen(false);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"logo-area\">\r\n        <h1 className=\"logo\">Dan Serio</h1><small>dserio.d@gmail.com</small>\r\n      </div>\r\n      <HeaderNav isOpen={isOpen} open={openMenu} close={closeMenu}/>\r\n    </header>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport SectionProps from './SectionProps'\r\nimport './Section.css'\r\n\r\nexport default function Section({ className, children, ...rest}: SectionProps) {\r\n  return <section className={`section ${className || ''}`.trim()} {...rest}>{children}</section>;\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './ProjectNav.css'\r\nimport './ProjectNav.dark.css'\r\n\r\nexport default function ProjectNav() {\r\n  return (\r\n    <nav className=\"project-nav\">\r\n      <NavLink to={'/todos'}>Todo App</NavLink>\r\n      <NavLink to={'/game-of-life'}>Game of Life</NavLink>\r\n      <NavLink to={'/words-per-minute'}>Words per minute</NavLink>\r\n    </nav>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ProjectProps from './ProjectProps'\r\nimport './Project.css';\r\n\r\nexport default function Project({ title, desc, className, children, ...rest}: ProjectProps) {\r\n  return (\r\n    <section className={`project ${className || ''}`.trim()} {...rest}>\r\n      <h1>{title}</h1>\r\n      <p><small>{desc}</small></p>\r\n      {children}\r\n    </section>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Button from '../../../controls/Button/Button'\r\nimport './GameOfLifeControls.css'\r\nimport GameOfLifeControlsProps from './GameOfLifeControlsProps'\r\n\r\nexport default function GameOfLifeControls({ refresh, nextFrame }: GameOfLifeControlsProps) {\r\n  return (\r\n    <div className=\"game-of-life-controls\">\r\n      <Button variant=\"outline\" onClick={refresh}>Refresh</Button>\r\n      <Button onClick={nextFrame}>Next Frame</Button>\r\n    </div>\r\n  )\r\n}\r\n","export class Cell {\r\n  public isAlive: boolean;\r\n\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    chance?: number\r\n  ) {\r\n    const { random } = Math;\r\n    if (chance) this.isAlive = random() >= chance;\r\n    else this.isAlive = random() >= 0.75;\r\n  }\r\n}\r\n\r\nexport interface CellOptions {\r\n  size: number;\r\n  aliveFill: string;\r\n  aliveStroke: string;\r\n  deadFill: string;\r\n  deadStroke: string;\r\n}\r\n\r\nexport function createCells(n: number, chance: number): Cell[][] {\r\n  const { sqrt } = Math;\r\n  const colCount: number = ~~sqrt(n);\r\n  const cells: Cell[][] = [];\r\n\r\n  for (let y = 0; y < colCount; y++) {\r\n    const row: Cell[] = [];\r\n    for (let x = 0; x < colCount; x++) row.push(new Cell(x, y));\r\n    cells.push(row);\r\n  }\r\n\r\n  return cells;\r\n}\r\n\r\nexport function getNextCells(cells: Cell[][]): Cell[][] {\r\n  function countLivingNeighbors(x: number, y: number): number {\r\n    const origins: [number, number][] = [\r\n      [-1, -1],[0, -1],[1, -1],\r\n      [-1, 0],[1, 0],\r\n      [-1, 1],[0, 1],[1, 1]\r\n    ];\r\n    let count: number = 0;\r\n\r\n    for (let origin of origins) {\r\n      if (cells[y + origin[1]] && cells[y + origin[1]][x + origin[0]]) {\r\n        const cell: Cell = cells[y + origin[1]][x + origin[0]];\r\n        if (cell.isAlive) count++;\r\n      }\r\n    }\r\n\r\n    return count;\r\n  }\r\n\r\n  const newCells: Cell[][]= [];\r\n\r\n  for (let y = 0; y < cells.length; y++) {\r\n    const row: Cell[] = [];\r\n\r\n    for (let x = 0; x < cells[y].length; x++) {\r\n      const cell: Cell = cells[y][x];\r\n      const count: number = countLivingNeighbors(x, y);\r\n      let newCell: Cell = new Cell(x, y);\r\n\r\n      if ((cell.isAlive && (count >= 2 && count <= 3)) || (!cell.isAlive && count === 3)) {\r\n        newCell.isAlive = true;\r\n      } else {\r\n        newCell.isAlive = false;\r\n      }\r\n\r\n      row.push(newCell);\r\n    }\r\n\r\n    newCells.push(row);\r\n  }\r\n\r\n  return newCells;\r\n}\r\n\r\nexport function renderCells(ctx: CanvasRenderingContext2D, cells: Cell[][], options: CellOptions): void {\r\n\r\n\r\n  function renderCell(cell: Cell): void {\r\n    const { x, y, isAlive } = cell;\r\n    const { aliveFill, aliveStroke, deadFill, deadStroke, size } = options;\r\n    ctx.beginPath();\r\n    ctx.save();\r\n    ctx.fillStyle = isAlive ? aliveFill : deadFill;\r\n    ctx.strokeStyle = isAlive ? aliveStroke : deadStroke;\r\n    ctx.translate(x * size, y * size);\r\n    ctx.rect(1, 1, size - 2, size - 2);\r\n    ctx.fill();\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    ctx.closePath();\r\n  }\r\n  \r\n  for (let y = 0; y < cells.length; y++) {\r\n    for (let x = 0; x < cells[y].length; x++) renderCell(cells[y][x]);\r\n  }\r\n  console.log(`RENDERED CELLS ${new Date().getTime()}`);\r\n}","import React, { useContext, useRef, useState, useEffect, RefObject } from 'react'\r\nimport { useMemo } from 'react';\r\nimport ThemeContext from '../../../state/ThemeContext';\r\nimport Project from '../../containers/Project/Project'\r\nimport GameOfLifeControls from './GameOfLifeControls/GameOfLifeControls';\r\nimport { Cell, CellOptions, createCells, getNextCells, renderCells } from './Life';\r\n\r\nexport default function GameOfLife() {\r\n  const ref: RefObject<HTMLCanvasElement> = useRef(null);\r\n  const [cells, setCells] = useState<Cell[][]>(createCells(400, 0.78));\r\n  const [theme] = useContext(ThemeContext);\r\n  const cellOptions = useMemo<CellOptions>(() => {\r\n    const CellOptionsLight: CellOptions = {\r\n      size: 16,\r\n      aliveFill: '#48d583',\r\n      aliveStroke: '#114c2a',\r\n      deadFill: 'transparent',\r\n      deadStroke: '#808377',\r\n    };\r\n  \r\n    const CellOptionsDark: CellOptions = {\r\n      size: 16,\r\n      aliveFill: '#114c2a',\r\n      aliveStroke: '#48d583',\r\n      deadFill: 'transparent',\r\n      deadStroke: '#2a2b27',\r\n    };\r\n    return theme.prefersDark ? CellOptionsDark : CellOptionsLight;\r\n  }, [theme.prefersDark]);\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      ref.current.height = 16 * 20;\r\n      ref.current.width = 16 * 20; \r\n      const ctx = ref.current.getContext('2d') as CanvasRenderingContext2D;\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      renderCells(ctx, cells, cellOptions);\r\n    } \r\n  }, [cells, cellOptions]);\r\n\r\n  const refresh = () => setCells(createCells(400, 0.78));\r\n\r\n  const nextFrame = () => setCells(getNextCells(cells));\r\n\r\n  \r\n  const title: string = 'Game of Life';\r\n  const desc: string = `A Simple implementation of Conway's Game of Life`;\r\n\r\n  return (\r\n    <Project title={title} desc={desc}>\r\n      <canvas ref={ref}></canvas>\r\n      <GameOfLifeControls refresh={refresh} nextFrame={nextFrame}/>\r\n    </Project>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ButtonGroupProps from './ButtonGroupProps'\r\nimport './ButtonGroup.css'\r\n\r\nexport default function ButtonGroup({ children, className, ...rest}: ButtonGroupProps) {\r\n  return (\r\n    <div className={`btn-group ${className || ''}`.trim()} {...rest}>{children}</div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Button from '../../../controls/Button/Button'\r\nimport { TodoControlsProps } from './TodoControlsProps'\r\nimport ButtonGroup from '../../../containers/ButtonGroup/ButtonGroup'\r\nimport './TodoControls.css'\r\n\r\nexport default function TodoControls({ noneComplete, noneSelected, allSelected, selectAll, selectNone, removeCompleted, removeSelected }: TodoControlsProps) {\r\n\r\n  return (\r\n    <thead className=\"todo-controls\">\r\n      <tr>\r\n       <td>\r\n         <div className=\"controls-cell\">\r\n          {allSelected && <Button className=\"subtle\"  small={true} onClick={selectNone}>Select None</Button>}\r\n          {!allSelected && <Button className=\"subtle\"  small={true} onClick={selectAll} > Select All</Button>}\r\n         </div>\r\n       </td>\r\n       <td>\r\n         <ButtonGroup className=\"controls-cell\">\r\n         <Button className=\"subtle\" small={true} variant=\"error\" disabled={noneComplete} onClick={removeCompleted}>Remove Complete</Button>\r\n          <Button className=\"subtle\"  small={true} variant=\"error\" disabled={noneSelected} onClick={removeSelected}>Remove Selected</Button>\r\n         </ButtonGroup>\r\n       </td>\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport InputProps from './InputProps'\r\nimport './Input.css';\r\n\r\nexport default function Input({className, ...rest}: InputProps) {\r\n  return <input className={`input primary ${className || ''}`.trim()} {...rest}/>\r\n}\r\n","import React, { ChangeEvent, FormEvent, RefObject, useState, useRef } from 'react'\r\nimport Button from '../../../controls/Button/Button';\r\nimport Input from '../../../controls/Input/Input'\r\nimport TodoFormProps from './TodoFormProps';\r\nimport './TodoForm.css';\r\n\r\nexport default function TodoForm({ addTodo }: TodoFormProps) {\r\n  const [todo, setTodo] = useState<string>('');\r\n  const ref: RefObject<HTMLFormElement> = useRef(null);\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setTodo(value);\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    setTodo('');\r\n    addTodo(todo);\r\n    if (ref.current) ref.current.reset(); \r\n  };\r\n\r\n  return (\r\n    <form ref={ref} className=\"todo-form\" onSubmit={handleSubmit}>\r\n      <Input type=\"text\" name=\"todo\" onChange={handleChange} defaultValue={todo}/>\r\n      <Button type=\"submit\" style={{marginLeft: '1rem'}} disabled={todo.length === 0 ? true : false}>Add</Button>\r\n    </form>\r\n  )\r\n}\r\n","import React, { useState, useMemo, useRef,  RefObject} from 'react'\r\nimport CheckboxProps from './CheckboxProps'\r\nimport './Checkbox.css'\r\n\r\nexport default function Checkbox({ defaultChecked, onClick, ...rest}: CheckboxProps) {\r\n  const [checked, setChecked] = useState(defaultChecked);\r\n  \r\n  useMemo(() => {\r\n    setChecked(defaultChecked)\r\n  }, [defaultChecked])\r\n\r\n  const handleClick = () => {\r\n    setChecked(!checked);\r\n    if (onClick) onClick(checked || false);\r\n  };\r\n  return (\r\n    <div className={`checkbox ${checked ? 'checked': ''}`} onClick={handleClick} onTouchEnd={handleClick}></div>\r\n  );\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport Checkbox from '../../../controls/Checkbox/Checkbox'\r\nimport TodoItemProps from './TodoItemProps'\r\nimport './TodoItem.css';\r\nimport ITodo from '../Todo';\r\n\r\nexport default function TodoItem({ toggleSelected, toggleComplete, selected, complete, text, ...rest}: TodoItemProps) {\r\n  let todo = useMemo<ITodo>(() => ({ text, complete, selected }), [text, complete, selected]);\r\n  const handleToggle = () => toggleSelected(todo);\r\n\r\n\r\n  return (\r\n    <tr {...rest} className=\"todo-item\">\r\n      <td>\r\n        <div className=\"cell\">\r\n          {<Checkbox onClick={handleToggle} defaultChecked={selected}/>}\r\n        </div>\r\n      </td>\r\n      <td onClick={() => toggleComplete(todo)} onTouchEnd={() => toggleComplete(todo)}>\r\n        <div className=\"cell\" style={todo.complete ? {opacity: 0.5, textDecoration: 'line-through'} : {opacity: 1, textDecoration: 'none'}}>\r\n          {text}\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ITodo from '../Todo'\r\nimport TodoItem from '../TodoItem/TodoItem'\r\nimport TodoListProps from './TodoListProps'\r\nimport './TodoList.css';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function TodoList({ todos, toggleComplete, toggleSelected }: TodoListProps) {\r\n\r\n  useEffect(() => { console.log(todos)}, [todos]);\r\n  return (\r\n    <tbody className=\"todo-list\">\r\n      {todos.map((todo: ITodo) => {\r\n        const { text, complete, selected } = todo;\r\n        return <TodoItem key={text} text={text} complete={complete} selected={selected} toggleSelected={toggleSelected} toggleComplete={toggleComplete}/>\r\n      })}\r\n    </tbody>\r\n  )\r\n}\r\n","import React, { useState, useMemo } from 'react'\r\nimport Project from '../../containers/Project/Project'\r\nimport ITodo from './Todo';\r\nimport TodoControls from './TodoControls/TodoControls';\r\nimport TodoForm from './TodoForm/TodoForm';\r\nimport TodoList from './TodoList/TodoList';\r\nimport './Todos.css';\r\n\r\nexport default function Todos() {\r\n  const [todos, setTodos] = useState<ITodo[]>([\r\n    {\r\n      text: 'Walk the Dog',\r\n      complete: false,\r\n      selected: false\r\n    },\r\n    {\r\n      text: 'Feed the Dog',\r\n      complete: true,\r\n      selected: false\r\n    },\r\n    {\r\n      text: 'Make dinner',\r\n      complete: false,\r\n      selected: false\r\n    }\r\n  ]);\r\n\r\n  const sortTodos = () => {\r\n    setTodos(todos.sort((a: ITodo, b: ITodo): number => {\r\n      if (b.text < a.text) return -1;\r\n      if (b.text > a.text) return 1;\r\n      return 0;\r\n    }));\r\n  };\r\n\r\n  useMemo(() => sortTodos(), [todos]);\r\n  const allSelected = useMemo<boolean>(() => todos.filter(t => t.selected === false).length === 0, [todos]);\r\n  const noneSelected = useMemo<boolean>(() => todos.filter(t => t.selected === true).length === 0, [todos]);\r\n  const noneComplete = useMemo<boolean>(() => todos.filter(t => t.complete === true).length === 0, [todos]);\r\n\r\n  const addTodo = (text: string): void => {\r\n    text = text.trim().replace(/\\s+/s, ' ');\r\n    const exists: boolean = todos.filter((t: ITodo) => t.text.toUpperCase() === text.toUpperCase()).length > 0;\r\n\r\n    if (!exists) {\r\n      setTodos([\r\n        ...todos,\r\n        {\r\n          text,\r\n          complete: false\r\n        }\r\n      ]);\r\n    }\r\n  };\r\n  \r\n  const removeSelected = (): void => setTodos(todos.filter((t: ITodo) => !t.selected));\r\n\r\n\r\n  const removeCompleted = (): void => setTodos(todos.filter((t: ITodo) => !t.complete));\r\n\r\n  const selectAll = (): void => {\r\n    setTodos(todos.map(t => {\r\n      t.selected = true;\r\n      return t;\r\n    }));\r\n  };\r\n\r\n  const selectNone = (): void => {\r\n    setTodos(todos.map(t => {\r\n      t.selected = false;\r\n      return t;\r\n    }));\r\n  };\r\n\r\n  const updateTodo = (text: string, data: {complete?: boolean, selected?: boolean}): void => {\r\n    const searchString: string = text.toUpperCase();\r\n    const todo: ITodo = todos.filter(t => t.text.toUpperCase() === searchString)[0];\r\n    \r\n    if (data.complete !== undefined) todo.complete = data.complete;\r\n    if (data.selected !== undefined) todo.selected = data.selected;\r\n\r\n    setTodos([...todos.filter(t => t.text.toUpperCase() !== searchString), todo]);\r\n  };\r\n\r\n  const toggleSelected = (todo: ITodo): void => updateTodo(todo.text, {selected: !todo.selected});\r\n\r\n  const toggleComplete = (todo: ITodo): void => {\r\n    const { text, complete } = todo;\r\n    updateTodo(text, {complete: !complete})\r\n  };\r\n\r\n  const title: string = 'Todo App';\r\n  const desc: string = 'A simple todo app';\r\n\r\n  return (\r\n    <Project className=\"todos\" title={title} desc={desc}>\r\n      {!todos.length && <h3 style={{opacity: 0.67}}>No Todos</h3>}\r\n      {todos.length > 0 && \r\n        <table>\r\n          <TodoControls \r\n            todos={todos} \r\n            selectNone={selectNone} \r\n            selectAll={selectAll} \r\n            noneSelected={noneSelected} \r\n            allSelected={allSelected} \r\n            noneComplete={noneComplete}\r\n            removeCompleted={removeCompleted} \r\n            removeSelected={removeSelected} />\r\n          <TodoList \r\n          todos={todos} \r\n          toggleSelected={toggleSelected} \r\n          toggleComplete={toggleComplete}/>\r\n        </table> \r\n      }         \r\n      <TodoForm addTodo={addTodo}/>\r\n    </Project>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport WPMControlsProps from './WPMControlsProps'\r\nimport './WPMControls.css'\r\nimport Button from '../../../controls/Button/Button'\r\n\r\nexport default function WPMControls({ isRunning, stop, start, reset }: WPMControlsProps) {\r\n  const [doneClicked, setDoneClicked] = useState<boolean>(false);\r\n  \r\n  const handleDoneClicked = () => {\r\n    setDoneClicked(true);\r\n    stop();\r\n  };\r\n\r\n  const handleRestartClick = () => {\r\n    reset();\r\n    start();\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"wpm-controls\">\r\n      {(!isRunning && !doneClicked) && <Button onClick={() => (start())}>Start</Button>}\r\n      {isRunning && <Button onClick={handleDoneClicked}>Done</Button>}\r\n      {(!isRunning && doneClicked) && <Button onClick={handleRestartClick}>Restart</Button>}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport WPMResultsProps from './WPMResultsProps'\r\nimport './WPMResults.css';\r\n\r\nexport default function WPMResults({ wpm, accuracy, totalTime }: WPMResultsProps) {\r\n  return (\r\n    <div className=\"wpm-results\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td><div className=\"table-cell\">Words Per Minute</div></td>\r\n            <td><div className=\"table-cell\">Total Time (Seconds)</div></td>\r\n            <td><div className=\"table-cell\">Accuracy</div></td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td><div className={`table-cell ${wpm <= 15 ? 'negative' : wpm >= 60 ? 'positive' : ''}`.trim()}>{wpm}</div></td>\r\n            <td><div className=\"table-cell\">{totalTime.toFixed(2)}</div></td>\r\n            <td><div className={`table-cell ${accuracy <= 60 ? 'negative' : accuracy >= 90 ? 'positive' : ''}`.trim()}>{accuracy}%</div></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","\r\nexport default function getAccuracy(text: string, compareText: string): number {\r\n  let longer: string = text;\r\n  let shorter: string = compareText;\r\n  if (text.length < compareText.length) {\r\n    longer = compareText;\r\n    shorter = text;\r\n  }\r\n  let longerLength: number = longer.length;\r\n  if (longerLength === 0) return 1.0;\r\n  return (longerLength - editDistance(longer, shorter)) / parseFloat(`${longerLength}`);\r\n}\r\n\r\nfunction editDistance(text: string, compareText: string): number {\r\n  text = text.toLowerCase();\r\n  compareText = compareText.toLowerCase();\r\n\r\n  let costs = new Array();\r\n  for (let i = 0; i <= text.length; i++) {\r\n    let lastValue = i;\r\n    for (let j = 0; j <= compareText.length; j++) {\r\n      if (i === 0)\r\n        costs[j] = j;\r\n      else {\r\n        if (j > 0) {\r\n          let newValue = costs[j - 1];\r\n          if (text.charAt(i - 1) !== compareText.charAt(j - 1))\r\n            newValue = Math.min(Math.min(newValue, lastValue),\r\n              costs[j]) + 1;\r\n          costs[j - 1] = lastValue;\r\n          lastValue = newValue;\r\n        }\r\n      }\r\n    }\r\n    if (i > 0) costs[compareText.length] = lastValue;\r\n  }\r\n  return costs[compareText.length];\r\n}","import React, { useRef, RefObject, useEffect} from 'react'\r\nimport { useContext } from 'react';\r\nimport ThemeContext from '../../../../state/ThemeContext';\r\n\r\nimport WPMDisplayProps from './WPMDisplayProps'\r\n\r\nexport default function WPMDisplay({ content }: WPMDisplayProps) {\r\n  const ref: RefObject<HTMLCanvasElement> = useRef(null);\r\n  const [theme] = useContext(ThemeContext);\r\n  function chunkArray(arr: string[], chunkSize: number): string[][] {\r\n      const temp: string[][] = [];\r\n      for (let i = 0; i < arr.length; i += chunkSize) temp.push(arr.slice(i, i + chunkSize));\r\n      return temp;\r\n  }\r\n\r\n  const divideLines = (): string[][] => {\r\n    const lineCount: number = (content.match(/.{1,65}/g) || []).length;\r\n    const words: string[] = content.split(/\\s+/g);\r\n    const chunkSize: number = ~~(words.length / lineCount);\r\n    return chunkArray(words, chunkSize);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      ref.current.width = 680;\r\n      ref.current.height = 192;\r\n      const ctx: CanvasRenderingContext2D = ref.current.getContext('2d') as CanvasRenderingContext2D;\r\n      const lines: string[][] = divideLines();\r\n      ctx.font = '18px Tahoma normal';\r\n      ctx.fillStyle = theme.prefersDark ? '#fafafa' : '#121212';\r\n      lines.forEach((line: string[], i: number) => {\r\n        ctx.beginPath();\r\n        if (i === 0) {\r\n          ctx.fillText(line.join(' '), 1, 16);\r\n        } else {\r\n          ctx.fillText(line.join(' '), 1, 16 +(32 * i));\r\n        }\r\n        ctx.closePath();\r\n      });\r\n    }\r\n  }, [theme, theme.prefersDark]);\r\n\r\n  return (\r\n    <div>\r\n      <canvas width={680} height={192} ref={ref}></canvas>\r\n    </div>\r\n  )\r\n}\r\n","import React, { RefObject, useState, useRef, ChangeEvent, useMemo, useEffect } from 'react'\r\nimport Project from '../../containers/Project/Project';\r\nimport { desc, title } from './WPMGameDetails';\r\nimport useTimer from './useTimer';\r\nimport WPMControls from './Controls/WPMControls';\r\nimport WPMResults from './Results/WPMResults';\r\nimport { LoremIpsum } from 'lorem-ipsum';\r\nimport getAccuracy from './accuracy';\r\nimport WPMDisplay from './Display/WPMDisplay';\r\n\r\n\r\nexport default function WPMGame() {\r\n  const ipsum = new LoremIpsum();\r\n  const { start, stop, reset, isRunning, elapsed } = useTimer();\r\n  const clean = (s: string): string => s.trim().replace(/\\s+/g, ' '); \r\n  const ref: RefObject<HTMLTextAreaElement> = useRef(null);\r\n  const [content, setContent] = useState<string>(clean(ipsum.generateParagraphs(1)));\r\n  const [userText, setUserText] = useState<string>('');\r\n  const [accuracy, setAccuracy] = useState<number>(0);\r\n  const [wpm, setWpm] = useState<number>(0);\r\n  \r\n  const handleTextChange = (e: ChangeEvent<HTMLTextAreaElement>): void => {\r\n    const { value } = e.target;\r\n    setUserText(value);\r\n  };\r\n\r\n  const handleStart = () => start(() => { \r\n    if (ref.current) {\r\n      ref.current.disabled = false;\r\n      ref.current.focus();\r\n      setUserText('');\r\n    }\r\n    setContent(ipsum.generateParagraphs(1));\r\n   });\r\n\r\n   const handleRestart = () => { \r\n    if (ref.current) {\r\n      ref.current.disabled = false;\r\n      ref.current.value = '';\r\n      ref.current.focus();\r\n    }\r\n    setUserText('');\r\n    reset();\r\n    setContent(ipsum.generateParagraphs(1));\r\n   };\r\n\r\n   useMemo(() => {\r\n     const { round } = Math;\r\n    setAccuracy(+`${(getAccuracy(userText, content) * 100).toFixed(2)}`);\r\n    const totalUserWords: number = userText.trim().replace(/\\s+/g, ' ').split(/\\s/g).length;\r\n    let w: number = (totalUserWords/ elapsed()) * 60;\r\n    if (!isFinite(w)) w = 0;\r\n    setWpm(round(w * 1000));\r\n   }, [userText, content]);\r\n\r\n   useEffect(() => () => { stop(); reset(); }, []);\r\n\r\n  return (\r\n    <Project title={title} desc={desc}>\r\n      <WPMControls isRunning={isRunning} start={handleStart} stop={stop} reset={handleRestart}/>\r\n      {isRunning && <WPMDisplay content={content}/>}\r\n      <textarea disabled={!isRunning} onChange={handleTextChange} defaultValue={userText} className=\"textarea\" ref={ref}></textarea>\r\n      {!isRunning && <WPMResults accuracy={accuracy} wpm={wpm} totalTime={elapsed() / 1000}/>}\r\n    </Project>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport default function useTimer() {\r\n  const [isRunning, setIsRunning] = useState<boolean>(false);\r\n  const [timerInterval, setTimerInterval] = useState<NodeJS.Timeout|null>(null);\r\n  const [timer, setTimer] = useState<number>(0);\r\n  const [timeStart, setTimeStart] = useState<number>(0);\r\n  \r\n  const stop = () => setIsRunning(false);\r\n\r\n  const resume = () => setIsRunning(true);\r\n\r\n  const start = (cb?: () => void) => {\r\n    resume();\r\n    setTimeStart(Date.now());\r\n    setTimer(Date.now());\r\n    if (cb) cb();\r\n  };\r\n\r\n  const clear = () => {\r\n    setTimeStart(0);\r\n    setTimer(0);\r\n  };\r\n\r\n  const reset = () => {\r\n    stop();\r\n    clear();\r\n  };\r\n\r\n  const elapsed = (): number => timer - timeStart;\r\n\r\n  useEffect(() => {\r\n    if (isRunning && !timerInterval) {\r\n      setTimerInterval(setInterval(() => {\r\n        setTimer(Date.now());\r\n        console.group('interval');\r\n      }, 250) );\r\n    }\r\n\r\n    if (!isRunning && timerInterval) {\r\n      clearInterval(timerInterval);\r\n      setTimerInterval(null);\r\n    }\r\n\r\n    return () => {\r\n      if (timerInterval) clearInterval(timerInterval);\r\n      setTimerInterval(null);\r\n    }\r\n  }, [isRunning]);\r\n\r\n  return {start, stop, clear, reset, resume, elapsed, timer, isRunning, timeStart}\r\n}\r\n","export const title: string = 'Words Per Minute Game';\r\nexport const desc: string = 'A simple words per minute game';","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Section from '../../containers/Section/Section'\r\nimport ProjectNav from '../../navigation/ProjectNav/ProjectNav'\r\nimport GameOfLife from '../../projects/GameOfLife/GameOfLife'\r\nimport Todos from '../../projects/Todos/Todos'\r\nimport WPMGame from '../../projects/WPMGame/WPMGame'\r\nimport './Main.css'\r\n\r\nexport default function Main() {\r\n  return (\r\n    <main className=\"content\">\r\n      <div className=\"container\">\r\n        <Section className=\"about\" id=\"about\">\r\n          <article>\r\n            <h1>About</h1>\r\n            <p>\r\n              My name is Dan Serio. \r\n              I have loved web development since I first discovered it at the <a href=\"https://www.aaart.edu/\">American Academy of Art</a> Thirteen years ago.\r\n              I'm very interested in frontend development and I have a particular interest in Typescript and React. I also enjoy working on backend/fullstack projects as well as experimenting with other languages and libraries.\r\n              I like discovering and using the right tools for the job, and I take pleasure in seeking out the simplest solutions possible.\r\n            </p>\r\n          </article>\r\n        </Section>\r\n        <Section className=\"showcase\" id=\"showcase\">\r\n          <h1>Showcase</h1>\r\n          <ProjectNav />\r\n          <Switch>\r\n            <Route path=\"/todos\" component={Todos}/>\r\n            <Route path=\"/game-of-life\" component={GameOfLife}/>\r\n            <Route path=\"/words-per-minute\" component={WPMGame}/>\r\n          </Switch>\r\n        </Section>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n","import React, { useContext } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\nimport Footer from './components/partials/Footer/Footer';\nimport Header from './components/partials/Header/Header';\nimport Main from './components/partials/Main/Main';\nimport ThemeContext from './state/ThemeContext';\n\nfunction App() {\n  const [theme] = useContext(ThemeContext);\n\n  return (\n    <div className={theme.prefersDark ? 'app dark' : 'app'}>\n      <HashRouter>\n        <Header />\n        <Main />\n        <Footer />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './vars.css';\nimport './index.css';\nimport './typography.css';\nimport './theme.css';\nimport { ThemeProvider } from './state/ThemeContext';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}